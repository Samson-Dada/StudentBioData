// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(StudentAppContext))]
    partial class StudentAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateTime(2023, 6, 3, 8, 44, 13, 288, DateTimeKind.Utc).AddTicks(6524),
                            FirstName = "John",
                            Gender = "Male",
                            LastName = "Deo",
                            StudentClass = "Senior secondar school",
                            Subject = "Math"
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateTime(2023, 6, 3, 8, 44, 13, 288, DateTimeKind.Utc).AddTicks(6530),
                            FirstName = "Carlos",
                            Gender = "Female",
                            LastName = "Temi",
                            StudentClass = "Senior secondar school",
                            Subject = "Math"
                        },
                        new
                        {
                            StudentId = 3,
                            DateOfBirth = new DateTime(2023, 6, 3, 8, 44, 13, 288, DateTimeKind.Utc).AddTicks(6532),
                            FirstName = "Dayo",
                            Gender = "Male",
                            LastName = "Benson",
                            StudentClass = "Senior secondar school",
                            Subject = "Math"
                        });
                });

            modelBuilder.Entity("API.Models.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("SubjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            SubjectDescription = "Duo aliquyam at blandit ea enim et clita amet sanctus amet sanctus amet sanctus",
                            SubjectName = "Mathematic"
                        },
                        new
                        {
                            SubjectId = 2,
                            SubjectDescription = "Duo aliquyam at blandit ea enim et clita amet sanctus amet sanctus amet sanctus",
                            SubjectName = "Computer Science"
                        },
                        new
                        {
                            SubjectId = 3,
                            SubjectDescription = "Duo aliquyam at blandit ea enim et clita amet sanctus amet sanctus amet sanctus",
                            SubjectName = "English Language"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
